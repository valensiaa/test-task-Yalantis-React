{"version":3,"sources":["components/EmployeesBirthday/EmployeesBirthday.module.css","components/Employees/Employees.jsx","redux/employees-reducer.js","components/Employees/EmployeesContainer.jsx","components/EmployeesBirthday/EmployeesBirthday.jsx","redux/employeesBirthday-reducer.js","components/EmployeesBirthday/EmployeesBirthdayContainer.jsx","App.js","reportWebVitals.js","redux/redux-store.js","localStorage.js","index.js","components/Employees/Employees.module.css"],"names":["module","exports","Employees","props","resultData","a","axios","get","then","response","setUsers","data","setNotActiveUser","sortUsers","catch","err","console","error","useEffect","users","length","onChangeValue","event","booleanValue","target","value","userId","name","setActiveUser","className","styles","employeesBlock","employeesBlockData","sortedUsersByAlphabet","map","p","Object","entries","elem","usersBlockByLetter","u","userBlock","radioValue","activeUser","firstName","lastName","radioButtons","type","id","onChange","checked","SET_NOT_ACTIVE_USER","SET_ACTIVE_USER","SET_USERS","SORT_USERS","initialState","employeesReducer","state","action","alpha","Array","from","e","i","alphabet","x","String","fromCharCode","forEach","letter","obj","element","push","EmployeesContainer","connect","employeesPage","dispatch","setUsersAC","setRadioActiveAC","EmployeesBirthday","setActiveBirthdayUSers","sortActiveBirthdayUsers","setDobFormat","date","Date","day","getDate","year","getFullYear","index","getMonth","birthdayBlock","birthdaysBlock","activeUsersBirthday","sortedActiveUsersBirthday","monthsBlock","sort","b","localeCompare","listUsers","dob","SET_ACTIVE_BIRTHDAY_USERS","SORT_ACTIVE_BIRTHDAY_USERS","months","employeesBirthdayReducer","filter","newArrMonths","dateCurrent","monthCurrent","arrMonthsCurrent","slice","concat","month","monthDobIndex","EmployeesBirthdayContainer","employeesBirthdayPage","setActiveBirthdayUSersAC","App","useState","loaded","setLoaded","navigate","useNavigate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","persistedState","serializedState","localStorage","getItem","JSON","parse","loadState","reducers","combineReducers","store","createStore","subscribe","throttle","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","path","exact","document","getElementById"],"mappings":"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","file":"static/js/main.8897f031.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"birthdayBlock\":\"EmployeesBirthday_birthdayBlock__dYSxY\",\"birthdaysBlock\":\"EmployeesBirthday_birthdaysBlock__T0Jln\",\"listUsers\":\"EmployeesBirthday_listUsers__1neFq\",\"monthsBlock\":\"EmployeesBirthday_monthsBlock__3sw-D\"};","import styles from \"./Employees.module.css\";\nimport axios from \"axios\";\nimport React, { useEffect } from \"react\";\n\nconst Employees = (props) => {\n  const resultData = async () => {\n    await axios\n      .get(\"https://yalantis-react-school-api.yalantis.com/api/task0/users\")\n      .then((response) => {\n        props.setUsers(response.data);\n        props.setNotActiveUser();\n        props.sortUsers();\n      })\n      .catch((err) => console.error(`Error: ${err}`));\n  };\n\n  useEffect(() => {\n    if (!props.users.length) resultData();\n  });\n\n  let onChangeValue = (event) => {\n    let booleanValue = event.target.value;\n    let userId = event.target.name;\n    props.setActiveUser(booleanValue, userId);\n    props.sortUsers();\n  };\n\n  return (\n    <div className={styles.employeesBlock}>\n      <h1>Employees</h1>\n      <div className={styles.employeesBlockData}>\n        {props.sortedUsersByAlphabet.map((p) =>\n          Object.entries(p).map((elem) => (\n            <div className={styles.usersBlockByLetter}>\n              <h2>{elem[0]}</h2>\n              {typeof elem[1] === \"string\" ? (\n                <h3>{elem[1]}</h3>\n              ) : (\n                elem[1].map((u) => (\n                  <div key={u.id} className={styles.userBlock}>\n                    <h3\n                      className={\n                        u.radioValue === \"true\" ? styles.activeUser : \"\"\n                      }\n                    >\n                      {u.firstName} {u.lastName}\n                    </h3>\n                    <div className={styles.radioButtons}>\n                      <div>\n                        <input\n                          type=\"radio\"\n                          value=\"false\"\n                          name={u.id}\n                          onChange={onChangeValue}\n                          checked={u.radioValue === \"false\"}\n                        />\n                        not active\n                      </div>\n                      <div>\n                        <input\n                          type=\"radio\"\n                          value=\"true\"\n                          name={u.id}\n                          onChange={onChangeValue}\n                          checked={u.radioValue === \"true\"}\n                        />\n                        active\n                      </div>\n                    </div>\n                  </div>\n                ))\n              )}\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\nexport default Employees;\n","const SET_NOT_ACTIVE_USER = \"SET_NOT_ACTIVE_USER\";\nconst SET_ACTIVE_USER = \"SET_ACTIVE_USER\";\nconst SET_USERS = \"SET_USERS\";\nconst SORT_USERS = \"SORT_USERS\";\n\nlet initialState = {\n  users: [],\n  sortedUsersByAlphabet: [],\n};\n\nconst employeesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_NOT_ACTIVE_USER: {\n      return {\n        ...state,\n        users: state.users.map((u) => {\n          return { ...u, radioValue: \"false\" };\n        }),\n      };\n    }\n    case SET_ACTIVE_USER: {\n      return {\n        ...state,\n        users: state.users.map((u) => {\n          if (u.id === action.userId) {\n            return { ...u, radioValue: action.value };\n          }\n          return u;\n        }),\n      };\n    }\n    case SET_USERS: {\n      return {\n        ...state,\n        users: action.users,\n      };\n    }\n    case SORT_USERS: {\n      state.sortedUsersByAlphabet = [];\n      const alpha = Array.from(Array(26)).map((e, i) => i + 65);\n      const alphabet = alpha.map((x) => String.fromCharCode(x));\n      alphabet.forEach((i) => {\n        let letter = i;\n        let obj = {};\n        obj[letter] = [];\n        state.users.forEach((element) => {\n          if (letter === element.firstName[0]) {\n            obj[letter].push(element);\n          }\n        });\n        if (obj[letter].length === 0) obj[letter] = \"No employees\";\n        state.sortedUsersByAlphabet.push(obj);\n      });\n      return {\n        ...state,\n        sortedUsersByAlphabet: [...state.sortedUsersByAlphabet],\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const setRadioActiveAC = (value, userId) => ({\n  type: SET_ACTIVE_USER,\n  value,\n  userId,\n});\nexport const setUsersAC = (users) => ({ type: SET_USERS, users });\nexport const setNotActiveUsersAC = () => ({ type: SET_NOT_ACTIVE_USER });\nexport const sortUsersAC = (users) => ({ type: SORT_USERS, users });\n\nexport default employeesReducer;\n","import { connect } from \"react-redux\";\nimport Employees from \"./Employees\";\nimport {\n  setRadioActiveAC,\n  setUsersAC,\n  sortUsersAC,\n  setNotActiveUsersAC,\n} from \"../../redux/employees-reducer\";\n\nlet mapStateToProps = (state) => {\n  return {\n    users: state.employeesPage.users,\n    sortedUsersByAlphabet: state.employeesPage.sortedUsersByAlphabet,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    setUsers: (users) => {\n      dispatch(setUsersAC(users));\n    },\n    setActiveUser: (value, id) => {\n      dispatch(setRadioActiveAC(value, id));\n    },\n    sortUsers: () => {\n      dispatch(sortUsersAC());\n    },\n    setNotActiveUser: () => {\n      dispatch(setNotActiveUsersAC());\n    },\n  };\n};\n\nconst EmployeesContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Employees);\n\nexport default EmployeesContainer;\n","import styles from \"./EmployeesBirthday.module.css\";\nimport React, { useEffect } from \"react\";\n\nconst EmployeesBirthday = (props) => {\n  let users = props.users;\n  let sortActiveUsers = (u) => {\n    props.setActiveBirthdayUSers(u);\n    props.sortActiveBirthdayUsers();\n  };\n\n  useEffect(() => {\n    sortActiveUsers(users);\n  }, [users]);\n\n  let setDobFormat = (value) => {\n    let date = new Date(value);\n    let day = date.getDate();\n    let year = date.getFullYear();\n\n    const months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    let index = date.getMonth();\n    if (index === 12) index = 0;\n    return `${day} ${months[index]}, ${year} year`;\n  };\n\n  return (\n    <div className={styles.birthdayBlock}>\n      <h1>Employees birthday</h1>\n      <div className={styles.birthdaysBlock}>\n        {props.activeUsersBirthday.length === 0 ? (\n          <p>Employees List is empty</p>\n        ) : (\n          props.sortedActiveUsersBirthday.map((p) =>\n            Object.entries(p).map((elem) => (\n              <div key={elem.id} className={styles.monthsBlock}>\n                <h3>{elem[0]}</h3>\n                {typeof elem[1] === \"string\" ? (\n                  <p>{elem[1]}</p>\n                ) : (\n                  <ul key={elem.id}>\n                    {elem[1]\n                      .sort((a, b) => a.lastName.localeCompare(b.lastName))\n                      .map((u) => (\n                        <li key={u.id} className={styles.listUsers}>\n                          {u.lastName} {u.firstName} - {setDobFormat(u.dob)}\n                        </li>\n                      ))}\n                  </ul>\n                )}\n              </div>\n            ))\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeesBirthday;\n","const SET_ACTIVE_BIRTHDAY_USERS = \"SET_ACTIVE_BIRTHDAY_USERS\";\nconst SORT_ACTIVE_BIRTHDAY_USERS = \"SORT_ACTIVE_BIRTHDAY_USERS\";\nconst months = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nlet initialState = {\n  activeUsersBirthday: [],\n  sortedActiveUsersBirthday: [],\n};\n\nconst employeesBirthdayReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_BIRTHDAY_USERS: {\n      return {\n        ...state,\n        activeUsersBirthday: action.users.filter(\n          (elem) => elem.radioValue === \"true\"\n        ),\n      };\n    }\n    case SORT_ACTIVE_BIRTHDAY_USERS: {\n      let dateCurrent = new Date();\n      let monthCurrent = dateCurrent.getMonth();\n      let arrMonthsCurrent = [];\n      let newArrMonths;\n      months.forEach((elem, index) => {\n        months[monthCurrent] !== elem\n          ? arrMonthsCurrent.push(elem)\n          : (newArrMonths = months.slice(index).concat(arrMonthsCurrent));\n      });\n\n      state.sortedActiveUsersBirthday = [];\n      newArrMonths.forEach((month) => {\n        let obj = {};\n        obj[month] = [];\n        state.activeUsersBirthday\n          .sort((a, b) => {\n            return new Date(a.dob) - new Date(b.dob);\n          })\n          .forEach((element) => {\n            let date = new Date(element.dob);\n            let monthDobIndex = date.getMonth();\n            if (month === months[monthDobIndex]) obj[month].push(element);\n          });\n        if (obj[month].length === 0) obj[month] = \"No employees\";\n        state.sortedActiveUsersBirthday.push(obj);\n      });\n      return {\n        ...state,\n        sortedActiveUsersBirthday: [...state.sortedActiveUsersBirthday],\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const setActiveBirthdayUSersAC = (users) => ({\n  type: SET_ACTIVE_BIRTHDAY_USERS,\n  users,\n});\nexport const sortActiveBirthdayUsersAC = () => ({\n  type: SORT_ACTIVE_BIRTHDAY_USERS,\n});\n\nexport default employeesBirthdayReducer;\n","import { connect } from \"react-redux\";\nimport EmployeesBirthday from \"./EmployeesBirthday\";\nimport {\n  setActiveBirthdayUSersAC,\n  sortActiveBirthdayUsersAC,\n} from \"../../redux/employeesBirthday-reducer\";\n\nlet mapStateToProps = (state) => {\n  return {\n    users: state.employeesPage.users,\n    activeUsersBirthday: state.employeesBirthdayPage.activeUsersBirthday,\n    sortedActiveUsersBirthday:\n      state.employeesBirthdayPage.sortedActiveUsersBirthday,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    setActiveBirthdayUSers: (users) => {\n      dispatch(setActiveBirthdayUSersAC(users));\n    },\n    sortActiveBirthdayUsers: () => {\n      dispatch(sortActiveBirthdayUsersAC());\n    },\n  };\n};\n\nconst EmployeesBirthdayContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeesBirthday);\n\nexport default EmployeesBirthdayContainer;\n","import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport EmployeesContainer from \"./components/Employees/EmployeesContainer\";\nimport EmployeesBirthdayContainer from \"./components/EmployeesBirthday/EmployeesBirthdayContainer\";\n\nfunction App() {\n  const [loaded, setLoaded] = useState(false);\n\n  let navigate = useNavigate();\n  useEffect(() => {\n    navigate(\"/employees\");\n    if (loaded) return;\n    setLoaded(true);\n  }, [loaded, navigate]);\n\n  return (\n    <div className=\"App\">\n      <EmployeesContainer />\n      <EmployeesBirthdayContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { throttle } from \"lodash\";\nimport { combineReducers, createStore } from \"redux\";\nimport { loadState, saveState } from \"../localStorage\";\nimport employeesReducer from \"./employees-reducer\";\nimport employeesBirthdayReducer from \"./employeesBirthday-reducer\";\n\nconst persistedState = loadState();\n\nlet reducers = combineReducers({\n  employeesPage: employeesReducer,\n  employeesBirthdayPage: employeesBirthdayReducer,\n});\n\nlet store = createStore(reducers, persistedState);\n\nstore.subscribe(\n  throttle(() => {\n    saveState({\n      employeesPage: store.getState().employeesPage,\n    });\n  }, 1000)\n);\n\nexport default store;\n","export const loadState = () => {\n    try{\n        const serializedState = localStorage.getItem('state')\n        if(serializedState === null) {\n            return undefined\n        }\n        return JSON.parse(serializedState)\n    } catch(err) {\n        return undefined\n    }\n}\n\nexport const saveState = (state) => {\n    try {\n        const serializedState = JSON.stringify(state)\n        localStorage.setItem('state', serializedState)\n    } catch {\n\n    }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Routes, Route, HashRouter } from \"react-router-dom\";\nimport store from \"./redux/redux-store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n        <Routes>\n          <Route path=\"/\" element={<App />} />\n          <Route exact path=\"/employees\" element={<App />} />\n        </Routes>\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersBlockByLetter\":\"Employees_usersBlockByLetter__2b-Qu\",\"activeUser\":\"Employees_activeUser__3-AKT\",\"userBlock\":\"Employees_userBlock__3IpUy\",\"employeesBlockData\":\"Employees_employeesBlockData___jFMV\",\"employeesBlock\":\"Employees_employeesBlock__30otQ\",\"radioButtons\":\"Employees_radioButtons__TgKCQ\"};"],"sourceRoot":""}