{"version":3,"sources":["components/EmployeesBirthday/EmployeesBirthday.module.css","components/Employees/Employees.jsx","redux/employees-reducer.js","components/Employees/EmployeesContainer.jsx","components/EmployeesBirthday/EmployeesBirthday.jsx","redux/employeesBirthday-reducer.js","components/EmployeesBirthday/EmployeesBirthdayContainer.jsx","App.js","reportWebVitals.js","redux/redux-store.js","localStorage.js","index.js","components/Employees/Employees.module.css"],"names":["module","exports","Employees","props","resultData","a","axios","get","then","response","setUsers","data","setNotActiveUser","sortUsers","catch","err","console","error","useEffect","users","length","onChangeValue","event","booleanValue","target","value","userId","name","setActiveUser","className","styles","employeesBlock","employeesBlockData","sortedUsersByAlphabet","map","p","Object","entries","elem","usersBlockByLetter","u","userBlock","radioValue","activeUser","firstName","lastName","radioButtons","type","id","onChange","checked","SET_NOT_ACTIVE_USER","SET_ACTIVE_USER","SET_USERS","SORT_USERS","initialState","employeesReducer","state","action","alpha","Array","from","e","i","alphabet","x","String","fromCharCode","forEach","letter","obj","element","push","EmployeesContainer","connect","employeesPage","dispatch","setUsersAC","setRadioActiveAC","EmployeesBirthday","setActiveBirthdayUSers","sortActiveBirthdayUsers","setDobFormat","date","Date","day","getDate","year","getFullYear","index","getMonth","birthdayBlock","birthdaysBlock","activeUsersBirthday","sortedActiveUsersBirthday","monthsBlock","sort","b","localeCompare","listUsers","dob","SET_ACTIVE_BIRTHDAY_USERS","SORT_ACTIVE_BIRTHDAY_USERS","months","employeesBirthdayReducer","filter","newArrMonths","dateCurrent","monthCurrent","arrMonthsCurrent","slice","concat","month","monthDobIndex","EmployeesBirthdayContainer","employeesBirthdayPage","setActiveBirthdayUSersAC","App","useState","loaded","setLoaded","navigate","useNavigate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","persistedState","serializedState","localStorage","getItem","JSON","parse","loadState","reducers","combineReducers","store","createStore","subscribe","throttle","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","path","process","exact","document","getElementById"],"mappings":"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","file":"static/js/main.01dd144f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"birthdayBlock\":\"EmployeesBirthday_birthdayBlock__twVXH\",\"birthdaysBlock\":\"EmployeesBirthday_birthdaysBlock__1GK5C\",\"listUsers\":\"EmployeesBirthday_listUsers__2evgN\",\"monthsBlock\":\"EmployeesBirthday_monthsBlock__1X3UJ\"};","import styles from \"./Employees.module.css\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nconst Employees = (props) => {\r\n  const resultData = async () => {\r\n    await axios\r\n      .get(\"https://yalantis-react-school-api.yalantis.com/api/task0/users\")\r\n      .then((response) => {\r\n        props.setUsers(response.data);\r\n        props.setNotActiveUser();\r\n        props.sortUsers();\r\n      })\r\n      .catch((err) => console.error(`Error: ${err}`));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!props.users.length) resultData();\r\n  });\r\n\r\n  let onChangeValue = (event) => {\r\n    let booleanValue = event.target.value;\r\n    let userId = event.target.name;\r\n    props.setActiveUser(booleanValue, userId);\r\n    props.sortUsers();\r\n  };\r\n\r\n  return (\r\n    <div className={styles.employeesBlock}>\r\n      <h1>Employees</h1>\r\n      <div className={styles.employeesBlockData}>\r\n        {props.sortedUsersByAlphabet.map((p) =>\r\n          Object.entries(p).map((elem) => (\r\n            <div className={styles.usersBlockByLetter}>\r\n              <h2>{elem[0]}</h2>\r\n              {typeof elem[1] === \"string\" ? (\r\n                <h3>{elem[1]}</h3>\r\n              ) : (\r\n                elem[1].map((u) => (\r\n                  <div key={u.id} className={styles.userBlock}>\r\n                    <h3\r\n                      className={\r\n                        u.radioValue === \"true\" ? styles.activeUser : \"\"\r\n                      }\r\n                    >\r\n                      {u.firstName} {u.lastName}\r\n                    </h3>\r\n                    <div className={styles.radioButtons}>\r\n                      <div>\r\n                        <input\r\n                          type=\"radio\"\r\n                          value=\"false\"\r\n                          name={u.id}\r\n                          onChange={onChangeValue}\r\n                          checked={u.radioValue === \"false\"}\r\n                        />\r\n                        not active\r\n                      </div>\r\n                      <div>\r\n                        <input\r\n                          type=\"radio\"\r\n                          value=\"true\"\r\n                          name={u.id}\r\n                          onChange={onChangeValue}\r\n                          checked={u.radioValue === \"true\"}\r\n                        />\r\n                        active\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Employees;\r\n","const SET_NOT_ACTIVE_USER = \"SET_NOT_ACTIVE_USER\";\r\nconst SET_ACTIVE_USER = \"SET_ACTIVE_USER\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SORT_USERS = \"SORT_USERS\";\r\n\r\nlet initialState = {\r\n  users: [],\r\n  sortedUsersByAlphabet: [],\r\n};\r\n\r\nconst employeesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_NOT_ACTIVE_USER: {\r\n      return {\r\n        ...state,\r\n        users: state.users.map((u) => {\r\n          return { ...u, radioValue: \"false\" };\r\n        }),\r\n      };\r\n    }\r\n    case SET_ACTIVE_USER: {\r\n      return {\r\n        ...state,\r\n        users: state.users.map((u) => {\r\n          if (u.id === action.userId) {\r\n            return { ...u, radioValue: action.value };\r\n          }\r\n          return u;\r\n        }),\r\n      };\r\n    }\r\n    case SET_USERS: {\r\n      return {\r\n        ...state,\r\n        users: action.users,\r\n      };\r\n    }\r\n    case SORT_USERS: {\r\n      state.sortedUsersByAlphabet = [];\r\n      const alpha = Array.from(Array(26)).map((e, i) => i + 65);\r\n      const alphabet = alpha.map((x) => String.fromCharCode(x));\r\n      alphabet.forEach((i) => {\r\n        let letter = i;\r\n        let obj = {};\r\n        obj[letter] = [];\r\n        state.users.forEach((element) => {\r\n          if (letter === element.firstName[0]) {\r\n            obj[letter].push(element);\r\n          }\r\n        });\r\n        if (obj[letter].length === 0) obj[letter] = \"No employees\";\r\n        state.sortedUsersByAlphabet.push(obj);\r\n      });\r\n      return {\r\n        ...state,\r\n        sortedUsersByAlphabet: [...state.sortedUsersByAlphabet],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setRadioActiveAC = (value, userId) => ({\r\n  type: SET_ACTIVE_USER,\r\n  value,\r\n  userId,\r\n});\r\nexport const setUsersAC = (users) => ({ type: SET_USERS, users });\r\nexport const setNotActiveUsersAC = () => ({ type: SET_NOT_ACTIVE_USER });\r\nexport const sortUsersAC = (users) => ({ type: SORT_USERS, users });\r\n\r\nexport default employeesReducer;\r\n","import { connect } from \"react-redux\";\r\nimport Employees from \"./Employees\";\r\nimport {\r\n  setRadioActiveAC,\r\n  setUsersAC,\r\n  sortUsersAC,\r\n  setNotActiveUsersAC,\r\n} from \"../../redux/employees-reducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: state.employeesPage.users,\r\n    sortedUsersByAlphabet: state.employeesPage.sortedUsersByAlphabet,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUsers: (users) => {\r\n      dispatch(setUsersAC(users));\r\n    },\r\n    setActiveUser: (value, id) => {\r\n      dispatch(setRadioActiveAC(value, id));\r\n    },\r\n    sortUsers: () => {\r\n      dispatch(sortUsersAC());\r\n    },\r\n    setNotActiveUser: () => {\r\n      dispatch(setNotActiveUsersAC());\r\n    },\r\n  };\r\n};\r\n\r\nconst EmployeesContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Employees);\r\n\r\nexport default EmployeesContainer;\r\n","import styles from \"./EmployeesBirthday.module.css\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nconst EmployeesBirthday = (props) => {\r\n  let users = props.users;\r\n  let sortActiveUsers = (u) => {\r\n    props.setActiveBirthdayUSers(u);\r\n    props.sortActiveBirthdayUsers();\r\n  };\r\n\r\n  useEffect(() => {\r\n    sortActiveUsers(users);\r\n  }, [users]);\r\n\r\n  let setDobFormat = (value) => {\r\n    let date = new Date(value);\r\n    let day = date.getDate();\r\n    let year = date.getFullYear();\r\n\r\n    const months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    let index = date.getMonth();\r\n    if (index === 12) index = 0;\r\n    return `${day} ${months[index]}, ${year} year`;\r\n  };\r\n\r\n  return (\r\n    <div className={styles.birthdayBlock}>\r\n      <h1>Employees birthday</h1>\r\n      <div className={styles.birthdaysBlock}>\r\n        {props.activeUsersBirthday.length === 0 ? (\r\n          <p>Employees List is empty</p>\r\n        ) : (\r\n          props.sortedActiveUsersBirthday.map((p) =>\r\n            Object.entries(p).map((elem) => (\r\n              <div key={elem.id} className={styles.monthsBlock}>\r\n                <h3>{elem[0]}</h3>\r\n                {typeof elem[1] === \"string\" ? (\r\n                  <p>{elem[1]}</p>\r\n                ) : (\r\n                  <ul key={elem.id}>\r\n                    {elem[1]\r\n                      .sort((a, b) => a.lastName.localeCompare(b.lastName))\r\n                      .map((u) => (\r\n                        <li key={u.id} className={styles.listUsers}>\r\n                          {u.lastName} {u.firstName} - {setDobFormat(u.dob)}\r\n                        </li>\r\n                      ))}\r\n                  </ul>\r\n                )}\r\n              </div>\r\n            ))\r\n          )\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeesBirthday;\r\n","const SET_ACTIVE_BIRTHDAY_USERS = \"SET_ACTIVE_BIRTHDAY_USERS\";\r\nconst SORT_ACTIVE_BIRTHDAY_USERS = \"SORT_ACTIVE_BIRTHDAY_USERS\";\r\nconst months = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n\r\nlet initialState = {\r\n  activeUsersBirthday: [],\r\n  sortedActiveUsersBirthday: [],\r\n};\r\n\r\nconst employeesBirthdayReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_ACTIVE_BIRTHDAY_USERS: {\r\n      return {\r\n        ...state,\r\n        activeUsersBirthday: action.users.filter(\r\n          (elem) => elem.radioValue === \"true\"\r\n        ),\r\n      };\r\n    }\r\n    case SORT_ACTIVE_BIRTHDAY_USERS: {\r\n      let dateCurrent = new Date();\r\n      let monthCurrent = dateCurrent.getMonth();\r\n      let arrMonthsCurrent = [];\r\n      let newArrMonths;\r\n      months.forEach((elem, index) => {\r\n        months[monthCurrent] !== elem\r\n          ? arrMonthsCurrent.push(elem)\r\n          : (newArrMonths = months.slice(index).concat(arrMonthsCurrent));\r\n      });\r\n\r\n      state.sortedActiveUsersBirthday = [];\r\n      newArrMonths.forEach((month) => {\r\n        let obj = {};\r\n        obj[month] = [];\r\n        state.activeUsersBirthday\r\n          .sort((a, b) => {\r\n            return new Date(a.dob) - new Date(b.dob);\r\n          })\r\n          .forEach((element) => {\r\n            let date = new Date(element.dob);\r\n            let monthDobIndex = date.getMonth();\r\n            if (month === months[monthDobIndex]) obj[month].push(element);\r\n          });\r\n        if (obj[month].length === 0) obj[month] = \"No employees\";\r\n        state.sortedActiveUsersBirthday.push(obj);\r\n      });\r\n      return {\r\n        ...state,\r\n        sortedActiveUsersBirthday: [...state.sortedActiveUsersBirthday],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setActiveBirthdayUSersAC = (users) => ({\r\n  type: SET_ACTIVE_BIRTHDAY_USERS,\r\n  users,\r\n});\r\nexport const sortActiveBirthdayUsersAC = () => ({\r\n  type: SORT_ACTIVE_BIRTHDAY_USERS,\r\n});\r\n\r\nexport default employeesBirthdayReducer;\r\n","import { connect } from \"react-redux\";\r\nimport EmployeesBirthday from \"./EmployeesBirthday\";\r\nimport {\r\n  setActiveBirthdayUSersAC,\r\n  sortActiveBirthdayUsersAC,\r\n} from \"../../redux/employeesBirthday-reducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: state.employeesPage.users,\r\n    activeUsersBirthday: state.employeesBirthdayPage.activeUsersBirthday,\r\n    sortedActiveUsersBirthday:\r\n      state.employeesBirthdayPage.sortedActiveUsersBirthday,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setActiveBirthdayUSers: (users) => {\r\n      dispatch(setActiveBirthdayUSersAC(users));\r\n    },\r\n    sortActiveBirthdayUsers: () => {\r\n      dispatch(sortActiveBirthdayUsersAC());\r\n    },\r\n  };\r\n};\r\n\r\nconst EmployeesBirthdayContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EmployeesBirthday);\r\n\r\nexport default EmployeesBirthdayContainer;\r\n","import \"./App.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport EmployeesContainer from \"./components/Employees/EmployeesContainer\";\r\nimport EmployeesBirthdayContainer from \"./components/EmployeesBirthday/EmployeesBirthdayContainer\";\r\n\r\nfunction App() {\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  let navigate = useNavigate();\r\n  useEffect(() => {\r\n    navigate( '/employees');\r\n    if (loaded) return;\r\n    setLoaded(true);\r\n  }, [loaded, navigate]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <EmployeesContainer />\r\n      <EmployeesBirthdayContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { throttle } from \"lodash\";\r\nimport { combineReducers, createStore } from \"redux\";\r\nimport { loadState, saveState } from \"../localStorage\";\r\nimport employeesReducer from \"./employees-reducer\";\r\nimport employeesBirthdayReducer from \"./employeesBirthday-reducer\";\r\n\r\nconst persistedState = loadState();\r\n\r\nlet reducers = combineReducers({\r\n  employeesPage: employeesReducer,\r\n  employeesBirthdayPage: employeesBirthdayReducer,\r\n});\r\n\r\nlet store = createStore(reducers, persistedState);\r\n\r\nstore.subscribe(\r\n  throttle(() => {\r\n    saveState({\r\n      employeesPage: store.getState().employeesPage,\r\n    });\r\n  }, 1000)\r\n);\r\n\r\nexport default store;\r\n","export const loadState = () => {\r\n    try{\r\n        const serializedState = localStorage.getItem('state')\r\n        if(serializedState === null) {\r\n            return undefined\r\n        }\r\n        return JSON.parse(serializedState)\r\n    } catch(err) {\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state)\r\n        localStorage.setItem('state', serializedState)\r\n    } catch {\r\n\r\n    }\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Routes, Route, BrowserRouter } from \"react-router-dom\";\r\nimport store from \"./redux/redux-store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <Routes>\r\n          <Route path={process.env.PUBLIC_URL + '/'} element={<App />} />\r\n          <Route exact path={process.env.PUBLIC_URL + '/employees'} element={<App />} />\r\n        </Routes>\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersBlockByLetter\":\"Employees_usersBlockByLetter__RpSKh\",\"activeUser\":\"Employees_activeUser__155q8\",\"userBlock\":\"Employees_userBlock__vj1n8\",\"employeesBlockData\":\"Employees_employeesBlockData__2ZEtl\",\"employeesBlock\":\"Employees_employeesBlock__2pn7W\",\"radioButtons\":\"Employees_radioButtons__2XCZw\"};"],"sourceRoot":""}